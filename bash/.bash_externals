#!/usr/bin/env bash

# who am I
printf 'Running %s\n' "$BASH_SOURCE"

# node.js is loaded via nvm
export NVM_DIR="~/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# automatically load .env file into evironment
source /usr/local/opt/autoenv/activate.sh  # OSX
# source /home/geraldbaeck/.local/bin/activate.sh  # Windows 10 WSL
export AUTOENV_ENABLE_LEAVE=true

# virtualenvwrapper settings
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3  # OSX
# export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3  # Windows 10 WSL
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/projects
source /usr/local/bin/virtualenvwrapper.sh

# export PATH="$PATH:`yarn global bin`"
export PYTHONPATH="./.pip:$PYTHONPATH"

# android SDK
export ANDROID_HOME=~/Library/Android/sdk
export PATH=${PATH}:${ANDROID_HOME}/tools
export PATH=${PATH}:${ANDROID_HOME}/platform-tools

# flutter
export PATH=$HOME/Library/flutter/bin:$PATH

# git
git config --global core.excludesfile ~/.gitignore_global

# pyenv  # manage different python versions
eval "$(pyenv init -)"

# For compilers to find zlib you may need to set:
export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"

# For pkg-config to find zlib you may need to set:
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig"

# Add tab completion for bash completion 2
# Only for OSX
if [ -f $(brew --prefix)/share/bash-completion/bash_completion ]; then
    source $(brew --prefix)/share/bash-completion/bash_completion
fi

# Add completion for kitty terminal
if [ "$TERM" = "xterm-kitty" ]; then
    source <(kitty + complete setup bash)
    export KITTY_CONFIG_DIRECTORY="$HOME/.config/kitty/kitty.conf"
fi

eval "$(pipenv --completion)"

# add all stored ssh keys
ssh-add -A